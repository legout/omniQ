---
title: "OmniQ: A Flexible Task Queue Library for Python"
---

OmniQ is a modular Python task queue library designed for both local and distributed task processing. It provides a flexible architecture that supports multiple storage backends, worker types, and configuration methods. OmniQ enables developers to easily implement task queuing, scheduling, and distributed processing in their applications with both synchronous and asynchronous interfaces.

**Key Features:**

- Multiple storage backends (File, Memory, SQLite, PostgreSQL, Redis, NATS)
- Multiple worker types (Async, Thread Pool, Process Pool, Gevent)
- Support for both synchronous and asynchronous tasks and interfaces
- Task scheduling with cron and interval patterns (including pause/resume capability)
- Task dependencies and workflow management
- Task lifecycle event logging
- Result storage and retrieval
- Flexible configuration via code, objects, dictionaries, YAML files, or environment variables
- Multiple named queues with priority ordering
- Cloud storage support through fsspec (S3, Azure, GCP)
- TTL for tasks and results with automatic cleanup
